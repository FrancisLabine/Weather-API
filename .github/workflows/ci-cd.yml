name: Weather-API CI/CD

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: weather-api

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Run unit tests
        run: |
          cd go-api
          go test ./...

  # build-push:
  #   name: Build and Push Docker Image
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ secrets.AWS_REGION }}

  #   - name: Log in to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1

  #   - name: Build And Push
  #     run: |
  #       cd go-api
  #       GIT_SHA=$(git rev-parse --short HEAD)

  #       docker build -t $IMAGE_NAME:$GIT_SHA -t $IMAGE_NAME:latest .
  #       docker tag $IMAGE_NAME:latest ${{ secrets.ECR_REPOSITORY }}:latest
  #       docker tag $IMAGE_NAME:$GIT_SHA ${{ secrets.ECR_REPOSITORY }}:$GIT_SHA

  #       docker push ${{ secrets.ECR_REPOSITORY }}:latest
  #       docker push ${{ secrets.ECR_REPOSITORY }}:$GIT_SHA

  # deploy:
  #   needs: build-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Setup kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'v1.29.0'

  #     - name: Update kubeconfig for EKS cluster
  #       run: |
  #         aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

  #     - name: Deploy to EKS
  #       run: |
  #         kubectl apply -f k8s/weather-api.yml
  #         kubectl set image deployment/weather-api weather-api=${{ secrets.ECR_REPOSITORY }}:latest


